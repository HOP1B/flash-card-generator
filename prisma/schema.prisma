// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Group {
  id        String   @id @default(nanoid())
  name      String
  userId    String
  createdAt DateTime @default(now())
  topics    Topic[]
}

model Topic {
  id         String           @id @default(nanoid())
  youtubeId  String?
  filePath   String?
  userId     String
  groupId    String
  summary    String
  group      Group            @relation(fields: [groupId], references: [id])
  createdAt  DateTime         @default(now())
  flashcards TopicFlashCard[]
  quizId     String?          @unique
  quiz       TopicQuiz?
}

model TopicFlashCard {
  id       String @id @default(nanoid())
  question String
  answer   String
  topic    Topic  @relation(fields: [topicId], references: [id])
  topicId  String
}

model TopicQuiz {
  id        String              @id @default(nanoid())
  topic     Topic?              @relation(fields: [topicId], references: [quizId])
  topicId   String              @unique
  questions TopicQuizQuestion[]
}

model TopicQuizQuestion {
  id      String            @id @default(nanoid())
  title   String
  quiz    TopicQuiz         @relation(fields: [quizId], references: [id])
  options TopicQuizOption[]
  quizId  String
}

model TopicQuizOption {
  id         String            @id @default(nanoid())
  title      String
  isCorrect  Boolean
  question   TopicQuizQuestion @relation(fields: [questionId], references: [id])
  questionId String
}
